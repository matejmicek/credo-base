// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  deals             Deal[]

  @@map("users")
}

// Deal Pipeline
model Deal {
  id              String   @id @default(cuid())
  companyName     String
  description     String?
  uploadedText    String?  // Free text input from user
  foundingTeam    Json?    // JSON array of founding team members from AI analysis
  competitors     Json?    // JSON array/object of competitors extracted by AI
  deleted         Boolean  @default(false) // Soft delete flag
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  logoUrl         String?
  files           DealFile[]

  assignedTo      User     @relation(fields: [assignedToId], references: [id])
  assignedToId    String
  
  @@map("deals")
}

// Files uploaded for deals
model DealFile {
  id            String   @id @default(cuid())
  filename      String
  originalName  String
  mimeType      String
  size          Int
  url           String // Changed from 'path' to 'url' for S3 link
  openaiFileId  String?  // OpenAI file ID for uploaded files
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  deal          Deal     @relation(fields: [dealId], references: [id], onDelete: Cascade)
  dealId        String

  @@map("deal_files")
}
